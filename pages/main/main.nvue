<template>
	<view class="main-container">
		<swiper class="swiper" :circular="circular" :vertical="true" @change="onSwiperChange">
			<swiper-item v-for="(item, index) in videoList" :key="item.id">
				<video class="video" object-fit="fill" :id="item.id" :ref="item.id" :src="item.src+'?id='+index" :controls="false" :loop="true"
				 :show-center-play-btn="false"></video>
				<cover-view class="video_info">
					<cover-image class="info_tx" @click="goDetail" src="../../static/img/main/touxiang.png" mode="widthFix"></cover-image>
					<cover-image class="info_like" src="../../static/img/main/like.png" mode="widthFix"></cover-image>
					<text class="info_count">21312</text>
				</cover-view>
				<cover-view class="video-msg">
					<text class="msg_header" @click="showAd()">@古风小姐姐</text>
					<text class="msg_cont">等哈瞌睡的就啊上课接电话撒到家啊快乐</text>
				</cover-view>
				<!-- <view class="ad-view">
					<ad adpid="1111111111" @load="onload" type="video" @close="onclose" @error="onerror" @downloadchange="ondownloadchange"></ad>
				</view> -->
			</swiper-item>
		</swiper>
	</view>
</template>
<script>
	import AD from '../../utils/ad.js';
	const videoData = [
				'http://8.210.169.146:8010/video/link',
				'http://8.210.169.146:8010/video/link',
				'http://8.210.169.146:8010/video/link'];

	export default {
		data() {
			return {
				videoIndex: 0,
				circular: true,
				videoList: [
					{
					        id: "video0",
					        src: "",
					        img: ""
					    },{
                        id: "video1",
                        src: "",
                        img: ""
                    },{
                        id: "video2",
                        src: "",
                        img: ""
                    }
				],
				videoDataList: [],
				adList: [],
				adData: {}
			}
		},
		onLoad(e) {
			this.showAd()
			// this.getVideo()
		},
		onReady() {
			this.init();
			this.getData();

			for (let i = 0; i < 4; i++) {
				this.adList.push({
					id: i,
					adpid: "1111111111"
				})
			}



			this._adpid = 1507000689
		},
		methods: {
			getAdData: function(e) {
				// 仅APP平台支持
				plus.ad.getAds({
						adpid: '1111111111', // 替换为自己申请获取的广告位标识，此广告位标识仅在HBuilderX标准基座中有效，仅用于测试
						count: 1, // 广告数量，默认 3
						width: 300 // 根据宽度获取合适的广告(单位px)
					},
					(res) => {
						this.adData = res.ads[0];
						console.log(this.adData);
					},
					(err) => {
						console.log(err);
					}
				)
			},
			init() {
				this._videoIndex = 0;
				this._videoContextList = [];
				for (var i = 0; i < videoData.length; i++) {
					console.log(this)
					this._videoContextList.push(uni.createVideoContext('video' + i, this));
				}
				this._videoDataIndex = 0;
			},
			getData(e) {
				for (let k of videoData) {
					this.videoDataList.push(k)
				}
				setTimeout(() => {
					this.updateVideo(true);
				}, 200)
			},
			onSwiperChange(e) {
				this.videoIndex = e.detail.current
				let currentIndex = e.detail.current;
				if (currentIndex === this._videoIndex) {
					return;
				}

				let isNext = false;
				if (currentIndex === 0 && this._videoIndex === this.videoList.length - 1) {
					isNext = true;
				} else if (currentIndex === this.videoList.length - 1 && this._videoIndex === 0) {
					isNext = false;
				} else if (currentIndex > this._videoIndex) {
					isNext = true;
				}

				if (isNext) {
					videoData.push('http://8.210.169.146:8010/video/link')
					this._videoContextList.push(uni.createVideoContext('video', this));
					console.log(videoData)
					this.videoDataList.push('http://8.210.169.146:8010/video/link')
					console.log(videoData.length-1)
					let videoIndex = `video${videoData.length-1}` 
					this.videoList.push(
						{
					        id: videoIndex,
					        src: "",
					        img: ""
					    }
					)
					console.log(this.videoList)
					setTimeout(() => {
						this.updateVideo(true);
					}, 200)
					this._videoDataIndex++;
				} else {
					this._videoDataIndex--;
				}

				if (this._videoDataIndex < 0) {
					this._videoDataIndex = this.videoDataList.length - 1;
				} else if (this._videoDataIndex >= this.videoDataList.length) {
					this._videoDataIndex = 0;
				}

				this.circular = (this._videoDataIndex != 0);

				if (this._videoIndex >= 0) {
					this._videoContextList[this._videoIndex].pause();
					this._videoContextList[this._videoIndex].seek(0);
				}

				this._videoIndex = currentIndex;
				
				setTimeout(() => {
					this.updateVideo(isNext);
				}, 200);
			},
			getNextIndex(isNext) {
				let index = this._videoIndex + (isNext ? 1 : -1);
				if (index < 0) {
					return this.videoList.length - 1;
				} else if (index >= this.videoList.length) {
					return 0;
				}
				return index;
			},
			getNextDataIndex(isNext) {
				let index = this._videoDataIndex + (isNext ? 1 : -1);
				if (index < 0) {
					return this.videoDataList.length - 1;
				} else if (index >= this.videoDataList.length) {
					return 0;
				}
				return index;
			},
			updateVideo(isNext) {
				this.$set(this.videoList[this._videoIndex], 'src', this.videoDataList[this._videoDataIndex]);
				this.$set(this.videoList[this.getNextIndex(isNext)], 'src', this.videoDataList[this.getNextDataIndex(isNext)]);
				setTimeout(() => {
					console.log(this._videoIndex)
					this._videoContextList[this._videoIndex].play();
				}, 600);
				console.log("v:" + this._videoIndex + " d:" + this._videoDataIndex + "; next v:" + this.getNextIndex(
					isNext) + " next d:" + this.getNextDataIndex(isNext));
			},


			getAdData: function(e) {
				// 仅APP平台支持
				plus.ad.getAds({
						adpid: '1111111111', // 替换为自己申请获取的广告位标识，此广告位标识仅在HBuilderX标准基座中有效，仅用于测试
						count: 1, // 广告数量，默认 3
						width: 300 // 根据宽度获取合适的广告(单位px)
					},
					(res) => {
						this.adData = res.ads[0];
						console.log(this.adData);
					},
					(err) => {
						console.log(err);
					}
				)
			},
			onload(e) {
				console.log("onload");
			},
			onclose(e) {
				console.log("onclose: " + e.detail);
			},
			onerror(e) {
				console.log("onerror: " + e.detail.errCode + " message:: " + e.detail.errMsg);
			},
			ondownloadchange(e) {
				console.log("downloadchanged: " + JSON.stringify(e.detail));
			},

			showAd() {
				AD.show(this._adpid, (res) => {
					console.log("onclose")
					console.log(res)

					// 用户点击了【关闭广告】按钮
					if (res && res.isEnded) {
						// 正常播放结束
						console.log("onClose " + res.isEnded);
					} else {
						// 播放中途退出
						console.log("onClose " + res.isEnded);
					}

					// 可选预加载下一条广告数据，减少加载等待时间，调用此 API 不会显示loading，不影响业务
					// AD.load(this._adpid)
				}, (err) => {
					// 广告无法显示，输出错误信息，可以采集数据上报以便分析
					console.log(err) // {code: code, errMsg: message}
				})
			},

			// 跳转到详细页
			goDetail() {
				uni.navigateTo({
					url: '../detail/detail'
				})
			},

			getVideo() {
				const that = this
				// const params = {
				// 	url: '/video/link',
				// 	data: {
				// 		name: that.$storage.getStorage('name')
				// 	},
				// 	method: 'get',
				// 	callback(res) {
				// 		const link = res.response.link.link

				// 		const obj = {
				// 			id: `video${that.videoList.length}`,
				// 			src: link
				// 		}
				// 		that.videoList.push(obj)
				// 	}
				// }
				// this.$http.sendRequest(params)
			}
		},
		onShow() {
			// this._videoContextList[0].play();
		},
		onHide() {
			this._videoContextList[this._videoIndex].pause();
			this._videoContextList[this._videoIndex].seek(0);
		}
	}
</script>

<style scoped>
	/* #ifndef APP-PLUS */
	page {
		width: 100%;
		min-height: 100%;
	}

	/* #endif */

	.main-container {
		flex: 1;
		width: 750rpx;
		flex-direction: column;
		align-items: stretch;
		position: relative;
	}

	.swiper {
		flex: 1;
	}

	.swiper-item {
		flex: 1;
		position: relative;
	}

	.video {
		flex: 1;
		width: 750rpx;
		height: 100%;
	}

	.uni-video-container {
		/* height: auto; */
	}

	.video_info {
		position: absolute;
		bottom: 246upx;
		right: 32upx;
		width: 80upx;
		z-index: 99999;
	}

	.info_tx {
		width: 80upx;
		height: 80upx;
		border-width: 2px;
		border-style: solid;
		border-color: #fff;
		border-radius: 40upx;
	}

	.info_like {
		width: 60upx;
		height: 60upx;
		margin-top: 40upx;
		margin-bottom: 0;
		margin-left: 10upx;
	}

	.info_count {
		font-size: 26upx;
		color: #fff;
		text-align: center;
		margin-top: 5upx;
	}

	.video-msg {
		position: absolute;
		left: 10upx;
		bottom: 30upx;
	}

	.msg_header {
		font-size: 36upx;
		color: #fff;
		display: block;
	}

	.msg_cont {
		font-size: 28upx;
		color: #fff;
		margin-top: 16upx;
	}
</style>
